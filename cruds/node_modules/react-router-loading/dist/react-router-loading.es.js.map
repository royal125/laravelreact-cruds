{"version":3,"file":"react-router-loading.es.js","sources":["../lib/LoadingContext.ts","../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../react/jsx-runtime","../lib/Route.tsx","../lib/_DefaultLoadingScreen.tsx","../lib/utils.ts","../lib/_RouteWrapper.tsx","../lib/_LoadingRoutes.tsx","../lib/_LoadingMiddleware.tsx","../lib/Routes.tsx","../lib/index.ts"],"sourcesContent":["import { createContext } from 'react';\n\n// Interface\n\nexport interface LoadingContextActions {\n  start: () => void;\n  done: () => void;\n  restart: () => void;\n}\n\n// Actions\n\nconst LoadingContext = createContext<LoadingContextActions>({\n  start: () => { },\n  done: () => { },\n  restart: () => { }\n});\nLoadingContext.displayName = 'LoadingContext';\n\n// Value\n\nconst LoadingGetterContext = createContext<boolean>(false);\nLoadingGetterContext.displayName = 'LoadingGetterContext';\n\nexport {\n  LoadingContext,\n  LoadingGetterContext\n};\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import * as jsxRuntime from \"/Users/victor/Projects/own/react-router-loading/node_modules/react/jsx-runtime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import React, { FC } from 'react';\nimport { Route as OriginalRoute, RouteProps as OriginalRouteProps } from 'react-router';\n\ntype RouteProps = OriginalRouteProps & {\n  loading?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Route: FC<RouteProps> = ({ loading, ...props }) => <OriginalRoute {...props} />;\n\nexport default Route;\n","import React, { FC } from 'react';\n\nconst DefaultLoadingScreen: FC = () =>\n  <div\n    style={{\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'white'\n    }}\n  />;\n\nexport default DefaultLoadingScreen;\n","import React from 'react';\nimport { matchRoutes, RouteObject, Location } from 'react-router';\n\nexport type LoadingRouteObject = RouteObject & {\n  loading?: boolean;\n}\n\n// adapted from original createRoutesFromChildren\n// https://github.com/remix-run/react-router/blob/main/packages/react-router/lib/components.tsx\nexport function createRoutesFromChildren(children: React.ReactNode): LoadingRouteObject[] {\n  const routes: LoadingRouteObject[] = [];\n\n  React.Children.forEach(children, element => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      // eslint-disable-next-line prefer-spread\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n\n    const route: LoadingRouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loading: element.props.loading,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\nexport const isPathsDifferent = (first: Location, second: Location) =>\n  first.pathname !== second.pathname;\n\nexport const isPathsEqual = (first: Location, second: Location) =>\n  first.pathname === second.pathname;\n\nexport const isSearchDifferent = (first: Location, second: Location) =>\n  first.search !== second.search;\n\nexport const isLoadable = (location: Location, routes: LoadingRouteObject[]) => {\n  const matches = matchRoutes(routes, location);\n\n  if (!matches || matches.length === 0)\n    return false;\n\n  const lastMatch = matches[matches.length - 1];\n  return (lastMatch.route as LoadingRouteObject).loading;\n};\n","/* eslint-disable camelcase */\nimport React, { useMemo, FC } from 'react';\nimport { Location, NavigationType, UNSAFE_LocationContext, useRoutes } from 'react-router';\nimport { LoadingRouteObject } from './utils';\n\ninterface RouteWrapperProps {\n  routes: LoadingRouteObject[];\n  location: Location;\n  navigationType: NavigationType;\n  hidden?: boolean;\n}\n\nexport const RouteWrapper: FC<RouteWrapperProps> = ({ routes, location, navigationType, hidden }) => {\n  const element = useRoutes(routes, location);\n\n  return <div style={hidden ? { display: 'none' } : undefined}>\n    {useMemo(\n      () => <UNSAFE_LocationContext.Provider value={{ location, navigationType }}>\n        {element}\n      </UNSAFE_LocationContext.Provider>,\n      [location]\n    )}\n  </div>;\n};\n","\nimport React, { useState, useContext, useEffect, useMemo, useRef, PropsWithChildren, FC } from 'react';\nimport { useLocation, Location, useNavigationType, NavigationType } from 'react-router';\nimport { LoadingContext, LoadingGetterContext } from './LoadingContext';\nimport DefaultLoadingScreen from './_DefaultLoadingScreen';\nimport { createRoutesFromChildren, isLoadable, isPathsDifferent, isPathsEqual, isSearchDifferent } from './utils';\nimport { RouteWrapper } from './_RouteWrapper';\n\ninterface LoadingRoutesProps {\n  loadingScreen?: React.ElementType;\n  maxLoadingTime?: number;\n}\n\ninterface LoadingRoutesState {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nconst LOADING_PATHNAME = '__loading';\n\nconst LoadingRoutes: FC<PropsWithChildren<LoadingRoutesProps>> = ({\n  children,\n  loadingScreen: LoadingScreen,\n  maxLoadingTime = 0\n}) => {\n\n  // 🪝 Hooks\n  const location = useLocation();\n  const navigationType = useNavigationType();\n  const loadingContext = useContext(LoadingContext);\n  const isCurrentlyLoading = useContext(LoadingGetterContext);\n\n  // 🗄 State\n  const routes = useMemo(\n    () => createRoutesFromChildren(children),\n    [children]\n  );\n\n  const [current, setCurrent] = useState<LoadingRoutesState>(() => {\n    const isFirstPageLoadable = isLoadable(location, routes);\n\n    // if first page loadable showing loading screen\n    const firstLocation = isFirstPageLoadable\n      ? { ...location, pathname: LOADING_PATHNAME }\n      : location;\n\n    return {\n      location: firstLocation,\n      navigationType: navigationType\n    };\n  });\n  const [next, setNext] = useState<LoadingRoutesState>(current);\n\n  const timeout: React.MutableRefObject<NodeJS.Timeout | undefined> = useRef();\n\n  // 🔄 Lifecycle\n  // when location was changed\n  useEffect(() => {\n    // if not the same route mount it to start loading\n    if (isPathsDifferent(location, next.location)) {\n      const isPageLoadable = isLoadable(location, routes);\n\n      setNext({\n        location: { ...location },\n        navigationType\n      });\n\n      if (!isPageLoadable) {\n        loadingContext.done();\n        setCurrent({\n          location: { ...location },\n          navigationType\n        });\n      } else {\n        if (!isCurrentlyLoading)\n          loadingContext.start();\n        else\n          loadingContext.restart();\n      }\n    }\n\n    // if same as the current location stop loading\n    if (isPathsEqual(location, current.location)) {\n      loadingContext.done();\n\n      if (isSearchDifferent(location, current.location))\n        setCurrent({\n          location: { ...location },\n          navigationType\n        });\n    }\n  }, [location]);\n\n  // when loading is done\n  useEffect(() => {\n    if (!isCurrentlyLoading && isPathsDifferent(current.location, next.location))\n      setCurrent(next);\n  }, [isCurrentlyLoading]);\n\n  // setTimeout if maxLoadingTime is provided\n  useEffect(() => {\n    if (maxLoadingTime > 0) {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n        timeout.current = undefined;\n      }\n\n      if (isPathsDifferent(current.location, next.location)) {\n        timeout.current = setTimeout(() => {\n          loadingContext.done();\n        }, maxLoadingTime);\n      }\n    }\n  }, [current, next]);\n\n  // memo current and next components\n  return useMemo(\n    () => <>\n      {/* current */}\n      {\n        current.location.pathname !== LOADING_PATHNAME\n          ? <RouteWrapper\n            key={current.location.pathname}\n            routes={routes}\n            location={current.location}\n            navigationType={current.navigationType}\n          />\n          : LoadingScreen\n            ? <LoadingScreen />\n            : <DefaultLoadingScreen />\n      }\n\n      {/* hidden next */}\n      {\n        isPathsDifferent(current.location, next.location) &&\n        <RouteWrapper\n          key={next.location.pathname}\n          routes={routes}\n          location={next.location}\n          navigationType={next.navigationType}\n          hidden\n        />\n      }\n    </>,\n    [current, next]\n  );\n};\n\nexport default LoadingRoutes;\n","import React, { useState, useMemo, useCallback, useEffect, useRef, FC, PropsWithChildren } from 'react';\nimport { LoadingContext, LoadingGetterContext } from './LoadingContext';\nimport { topbar } from '.';\n\nconst LoadingMiddleware: FC<PropsWithChildren<{ isLoading?: boolean }>> = ({ children, isLoading = false }) => {\n  const [loading, setLoading] = useState(isLoading);\n  const isFirstRender = useRef(true);\n\n  const start = useCallback(() => {\n    topbar.show();\n    setLoading(true);\n  }, []);\n\n  const done = useCallback(() => {\n    topbar.hide();\n    setLoading(false);\n  }, []);\n\n  const restart = useCallback(() => {\n    topbar.hide();\n    topbar.show();\n  }, []);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      if (isLoading && !loading)\n        start();\n      else if (loading)\n        done();\n    } else {\n      isFirstRender.current = false;\n    }\n  }, [isLoading]);\n\n  const loadingProvider = useMemo(\n    () => <LoadingContext.Provider value={{ start, done, restart }}>\n      {children}\n    </LoadingContext.Provider>,\n    []\n  );\n\n  return (\n    <LoadingGetterContext.Provider value={loading}>\n      {loadingProvider}\n    </LoadingGetterContext.Provider>\n  );\n};\n\nexport default LoadingMiddleware;\n","import React, { ElementType, FC, ReactNode } from 'react';\nimport LoadingRoutes from './_LoadingRoutes';\nimport LoadingMiddleware from './_LoadingMiddleware';\n\ninterface RoutesProps {\n  children: ReactNode;\n  loadingScreen?: ElementType;\n  maxLoadingTime?: number;\n  isLoading?: boolean;\n}\n\n// combine topbar and switcher\nconst Routes: FC<RoutesProps> = ({ children, loadingScreen, maxLoadingTime, isLoading }) =>\n  <LoadingMiddleware isLoading={isLoading}>\n    <LoadingRoutes loadingScreen={loadingScreen} maxLoadingTime={maxLoadingTime}>\n      {children}\n    </LoadingRoutes>\n  </LoadingMiddleware>;\n\nexport default Routes;\n","import { useContext } from 'react';\nimport { default as _topbar } from 'topbar';\nimport { LoadingContext, LoadingGetterContext } from './LoadingContext';\n\nexport { default as Route } from './Route';\nexport { default as Routes } from './Routes';\n\nexport interface TopBarConfig {\n  autoRun?: boolean;\n  barThickness?: number;\n  barColors?: Record<number, string>;\n  shadowBlur?: number;\n  shadowColor?: string;\n  className?: string;\n}\n\nexport interface TopBar {\n  show: () => void;\n  hide: () => void;\n  config: (conf: TopBarConfig) => void;\n}\n\nconst topbar: TopBar = _topbar;\n\nconst useLoadingContext = () => useContext(LoadingContext);\n\nexport {\n  topbar,\n  useLoadingContext,\n  LoadingContext,\n  LoadingGetterContext\n};\n"],"names":["require$$0","jsxRuntimeModule","jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","Route","loading","props","OriginalRoute","DefaultLoadingScreen","_jsx","position","top","bottom","left","right","backgroundColor","RouteWrapper","routes","location","navigationType","hidden","element","useRoutes","display","undefined","useMemo","LOADING_PATHNAME","LoadingRoutes","children","loadingScreen","LoadingScreen","maxLoadingTime","useLocation","useNavigationType","loadingContext","useContext","LoadingContext","isCurrentlyLoading","LoadingGetterContext","createRoutesFromChildren","current","setCurrent","useState","isFirstPageLoadable","isLoadable","firstLocation","pathname","next","setNext","timeout","useRef","useEffect","isPathsDifferent","isPageLoadable","done","start","restart","isPathsEqual","isSearchDifferent","clearTimeout","setTimeout","_jsxs","_Fragment","LoadingMiddleware","isLoading","setLoading","isFirstRender","useCallback","topbar","show","hide","loadingProvider","Routes"],"mappings":"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"}